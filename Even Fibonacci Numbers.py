'''
Każdy nowy wyraz w ciągu Fibonacciego jest generowany przez dodanie dwóch poprzednich wyrazów.
Zaczynając od 1 i 2, pierwszymi wyrazami będą:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89...
Rozważając wyrazy ciągu Fibonacciego, których wartości nie przekraczają czterech milionów, znajdź sumę wyrazów o wartościach parzystych.

Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first  terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
'''


numbers = [1, 2]      # Utworzenie zmiennej z listą, w któtrej znajdują się dwie liczby 1 i 2, będące pierwszymi wyrazami.
result = 0            # Zmienna z przypisaną liczbą 0, jest to początkowy wynik.

while numbers[-1] <= 4000000:                   # Pętla while sprawdza czy ostatni element listy jest mniejszy od 4000000.
    new_number = numbers[-1] + numbers[-2]      # Jeżeli tak, do do zmiennej new_number przypisywany jest ostatni i pierwszy element listy.
    numbers.append(new_number)                  # Do listy numbers dodawane są elementy listy new_numbe.

for n in numbers:              # Pętla for każdy podzielny bez resty element listy numbers.
    if n % 2 == 0:
        result += n           # Dodaje do zmiennej result.

print(f"Wyrazy ciągu Fibbonaciego podzielne przez 2, mniejsze od 4000000: {result}")         # Drukowanie listy wynikowej.









